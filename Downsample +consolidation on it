...
...
...
#Split : 50/25/25
library(caTools)
set.seed(27947)
split = sample.split(new.tours$Book_12Mo, SplitRatio = 0.5)
split.valid<-!split
split.test<-!split
split2<-sample.split(new.tours$Book_12Mo[!split],SplitRatio = 1/2)
split.valid[split.valid==TRUE]= split2
split.test[split.test==TRUE]= !split2

#############
#Down-Sample#
############

library(caret)
vars <- -grep("^(Book_12Mo)", names(new.tours))

downSampledTrain <- downSample(x = new.tours[split ,vars],
                               y = as.factor(new.tours$Book_12Mo[split]),
                               yname = "Book_12Mo")

summary(downSampledTrain)#######
################################
################################

## Combine downsampled train with validation and test ##
data.down<-new.tours[(new.tours$EvalID %in% downSampledTrain$EvalID) | (split.valid)|(split.test),]

# Indicator for balanced train data #
split.down<-ifelse(data.down$EvalID %in% downSampledTrain$EvalID, TRUE, FALSE)
#indicator for validation #
split.down.valid<-ifelse(data.down$EvalID %in% new.tours$EvalID[split.valid],TRUE,FALSE)
#indicator for test#
split.down.test<-ifelse(data.down$EvalID %in% new.tours$EvalID[split.test],TRUE,FALSE)


######################
##### CONSOLIDATE ####
######################

########## Tour_Days  ###############
df.TourDays <- data.down[split.down, c("Tour_Days", "Book_12Mo")]
df.TourDays$Tour_Days <- as.factor(df.TourDays$Tour_Days)
library(Information)
str(df.TourDays)

IV.TourDays <- create_infotables(data = df.TourDays, y="Book_12Mo")
IV.TourDays[["Tables"]][["Tour_Days"]] <- IV.TourDays[["Tables"]][["Tour_Days"]][order(IV.TourDays[["Tables"]][["Tour_Days"]]$WOE),]
plot_infotables(IV.TourDays, "Tour_Days")
woe.TourDays1 <- IV.TourDays[["Tables"]][["Tour_Days"]]

fctr1 <- c(6,4,17,9,11,15,12,21,24)
fctr2 <- c(16,13,10,14,23,18,1)
fctr3 <- c(7,8,19)
data.down$Tour_Days_Con <- data.down$Tour_Days

ind1 <- which(data.down$Tour_Days_Con %in% fctr1)
ind2 <- which(data.down$Tour_Days_Con %in% fctr2)
ind3 <- which(data.down$Tour_Days_Con %in% fctr3)
data.down$Tour_Days_Con[ind1] <- "fctr1"
data.down$Tour_Days_Con[ind2] <- "fctr2"
data.down$Tour_Days_Con[ind3] <- "fctr3"

data.down$Tour_Days_Con<-as.factor(data.down$Tour_Days_Con)


########## State  ###############
df.State <- data.down[split.down,c("State","Book_12Mo")]
IV.State<- create_infotables(data=df.State, y="Book_12Mo")
IV.State[["Tables"]][["State"]] <- IV.State[["Tables"]][["State"]][order(IV.State[["Tables"]][["State"]]$WOE),]
x <-IV.State[["Tables"]][["State"]]

plot_infotables(IV.State, "State")

low <- x$State[which(x$WOE < (-0.2) | x$WOE==0)]
fair <- x$State[which(x$WOE > (-0.2) & x$WOE<0)]
med <- x$State[which(x$WOE>0 & x$WOE<0.15)]
good <- x$State[which(x$WOE>0.15)]

data.down$State_Con <-as.character(data.down$State) 
ind1 <- which(data.down$State %in% low)
ind2 <- which(data.down$State %in% fair)
ind3 <- which(data.down$State %in% med)
ind4 <- which(data.down$State %in% good)

data.down$State_Con[ind1] <- "low"
data.down$State_Con[ind2] <- "fair"
data.down$State_Con[ind3] <- "med"
data.down$State_Con[ind4] <- "good"

#Levels: fair good low med QC SW X XS XX

#Update these rare levels to most frequent group
data.down$State_Con[data.down$State_Con=="XX"]<-"fair"
data.down$State_Con[data.down$State_Con=="XS"]<-"fair"
#new.tours$State_Con[new.tours$State_Con=="SF"]<-"med"
data.down$State_Con[data.down$State_Con=="X"]<-"fair"
data.down$State_Con[data.down$State_Con=="SW"]<-"fair"
data.down$State_Con[data.down$State_Con=="VI"]<-"fair"
data.down$State_Con[data.down$State_Con=="UK"]<-"fair"
data.down$State_Con[data.down$State_Con=="SE"]<-"fair"
data.down$State_Con[data.down$State_Con=="QC"]<-"fair"


data.down$State_Con<-as.factor(data.down$State_Con)

################  Age  #########################
df.Age <- data.down[split.down,c("Age","Book_12Mo")]
IV.Age<- create_infotables(data=df.Age, y="Book_12Mo")
plot_infotables(IV.Age, "Age")

data.down$Age_Con <- as.character(data.down$Age) 
ind1 <- which(data.down$Age %in% c("30-39","40-44","45-49"))
ind2 <- which(data.down$Age %in% c("50-54","55-59","60-69","70-79"))
ind3 <- which(data.down$Age %in% c("No Age","Over 80","Under 30"))
length(ind1)+length(ind2)+length(ind3)

data.down$Age_Con[ind1] <- "mid"
data.down$Age_Con[ind2] <- "old"
data.down$Age_Con[ind3] <- "mix"

data.down$Age_Con<-as.factor(data.down$Age_Con)

######Consolidation using Decision_Tree####

data.down$Book_12Mo<-as.factor(data.down$Book_12Mo)
#consolidate using training data
consldt<-data.down[split.down,] %>% 
  select(TourCode,TourDate,Outbound_Domestic_Gateway,Return_Domestic_Gateway,
         Book_12Mo)
library(tree.bins)
library(rpart)
binned <- tree.bins(data = consldt, y = Book_12Mo,
                    bin.nm = "Group.", control = rpart.control(cp = .001),
                    return = "new.factors") 

############################
####combine bins to data #######
###########################

#Add consolidated categories for training data to new.tours df
data.down["TourCode_Groups"] <- as.factor(binned[[1]]$Categories[match(data.down$TourCode,binned[[1]]$TourCode)])
data.down["TourDate_Groups"] <- as.factor(binned[[2]]$Categories[match(data.down$TourDate,binned[[2]]$TourDate)])# ###########################################################################################
data.down["Outbound_Domestic_Gateway_Groups"] <- as.factor(binned[[3]]$Categories[match(data.down$Outbound_Domestic_Gateway,binned[[3]]$Outbound_Domestic_Gateway)])# ###########################################################################################
data.down["Return_Domestic_Gateway_Groups"] <- as.factor(binned[[4]]$Categories[match(data.down$Return_Domestic_Gateway,binned[[4]]$Return_Domestic_Gateway)])# ###########################################################################################

#Remove pre-consolidated column
data.down$Tour_Days<-NULL
data.down$State<-NULL
data.down$Age<-NULL
data.down$TourCode<-NULL
data.down$TourDate<-NULL
data.down$Outbound_Domestic_Gateway<-NULL
data.down$Return_Domestic_Gateway<-NULL

#####################
####Transformation ####
######################
tours.xf<-data.down
....
....
....
