###############  library  ###############
library(tidyverse)
library(Information)
library(caTools)
library(chron)

###########################################
###############  Load Data  ###############
###########################################
dat <- read.csv("modeling_data.csv", header=TRUE, na.strings=c(".", "NA", "", "?"))
# library(caTools)
set.seed(27947)
split = sample.split(dat$Book_12Mo, SplitRatio = 0.5) 
split.valid <-!split
split.test <- !split
split2 <- sample.split(dat$Book_12Mo[!split], SplitRatio = 0.5)
split.valid[split.valid == TRUE] = split2
split.test[split.test == TRUE] = !split2


############################################################
################  Prepare For Consolidation  ###############
############################################################

# 1. Convert TourDate to MMYY
dat$TourDate <- as.Date(dat$TourDate, "%m/%d/%Y")
dat$TourDate <- format(dat$TourDate, "%m/%Y")

# 2. For "time" variable, only keep hours
# library(chron)
ind <- c(76,82,85,91)
## convert to time 
for (i in seq(1:4)){
  temp <- ind[i]
  dat[,temp] <- times(dat[,temp])
}

## only keep hour
for (i in seq(1:4)){
  temp <- ind[i]
  dat[,temp] <- hours(dat[,temp])
}

for (i in seq(1:4)){
  temp <- ind[i]
  dat[ ,temp] <- as.factor(dat[ ,temp])
}

#####################################################
################  Data Consolidation  ###############
#####################################################

#################################  Summary  #################################
## We consoliidated variables by using WOE and decision tree

## Get the names for every column, and column #
Varnames <- as.data.frame(seq(from=1, to=ncol(dat)), col.names="index")
colnames(Varnames)[1] <-"index"
Varnames$name <- names(dat) 

# library(Information)
#########################################
##########  1. Tour_Days  ###############
#########################################
df.TourDays <- dat[split, c("Tour_Days", "Book_12Mo")]
df.TourDays$Tour_Days <- as.factor(df.TourDays$Tour_Days)

IV.TourDays <- create_infotables(data = df.TourDays, y="Book_12Mo")  
IV.TourDays[["Tables"]][["Tour_Days"]] <- IV.TourDays[["Tables"]][["Tour_Days"]][order(IV.TourDays[["Tables"]][["Tour_Days"]]$WOE),]
# plot_infotables(IV.TourDays, "Tour_Days")
woe.TourDays1 <- IV.TourDays[["Tables"]][["Tour_Days"]]

fctr1 <- c(6,4,17,9,11,15,12,21,24)
fctr2 <- c(16,13,10,14,23,18,1)
fctr3 <- c(7,8,19)
dat$Tour_Days_Con <- as.character(dat$Tour_Days)

ind1 <- which(dat$Tour_Days_Con %in% fctr1)
ind2 <- which(dat$Tour_Days_Con %in% fctr2)
ind3 <- which(dat$Tour_Days_Con %in% fctr3)
dat$Tour_Days_Con[ind1] <- "fctr1"
dat$Tour_Days_Con[ind2] <- "fctr2"
dat$Tour_Days_Con[ind3] <- "fctr3"
length(ind1)+length(ind2)+length(ind3)

dat$Tour_Days_Con <- as.factor(dat$Tour_Days_Con)
dat$Tour_Days <- NULL  ## delete "Tour_Days"


##############################################
########## Grp_size_ratio_Con  ###############
##############################################

##  This is a new variable we created. size_ratio = Grp_Size/Capacity
##  size_ratio_Con is variable consolidation for Grp_size_ratio
dat$Grp_Size_ratio <- dat$Grp_Size/dat$Capacity

df.ratio <- dat[split,c("Grp_Size_ratio","Book_12Mo")]
IV.ratio <- create_infotables(data=df.ratio, y="Book_12Mo", bins = 5)
# plot_infotables(IV.ratio, "Grp_Size_ratio")

dat$Grp_Size_ratio_Con <- as.character(dat$Grp_Size_ratio) 
ind1 <- which(dat$Grp_Size_ratio<=0.55)
ind2 <- which(dat$Grp_Size_ratio<=0.73 & dat$Grp_Size_ratio>0.55)
ind3 <- which(dat$Grp_Size_ratio>0.73)

dat$Grp_Size_ratio_Con[ind1] <- "low"
dat$Grp_Size_ratio_Con[ind2] <- "med"
dat$Grp_Size_ratio_Con[ind3] <- "compact"
dat$Grp_Size_ratio_Con <- factor(dat$Grp_Size_ratio_Con, order =T,levels = c("compact","med","low"))

dat[ ,c("Grp_Size_ratio","Grp_Size_Cat","Grp_Size","Capacity")] <- NULL


###################################
########## TourDate ###############
###################################
df.TourDate <- dat[split, c("TourDate", "Book_12Mo")]
df.TourDate$TourDate <- as.factor(df.TourDate$TourDate)

IV.TourDate <- create_infotables(data = df.TourDate, y="Book_12Mo")
IV.TourDate[["Tables"]][["TourDate"]] <- IV.TourDate[["Tables"]][["TourDate"]][order(IV.TourDate[["Tables"]][["TourDate"]]$WOE),]
# plot_infotables(IV.TourDate, "TourDate")
woe.TourDate <- IV.TourDate[["Tables"]][["TourDate"]]

## now,we are going to find which dates will be assigned to which group
low <- woe.TourDate$TourDate[which(woe.TourDate$WOE < -0.14)]
fair <- woe.TourDate$TourDate[which(woe.TourDate$WOE > -0.14 & woe.TourDate$WOE<0.07)]
good <- woe.TourDate$TourDate[which(woe.TourDate$WOE>0.07)]

dat$TourDate_Con <- as.character(dat$TourDate) 

ind1 <- which(dat$TourDate %in% low) # find the indices that will be assigned to "low" group
ind2 <- which(dat$TourDate %in% fair) # find the indices that will be assigned to "med" group
ind3 <- which(dat$TourDate %in% good) # find the indices that will be assigned to "good" group
# length(ind1)+length(ind2)+length(ind3) # check the number is right 

dat$TourDate_Con[ind1] <- "poor"
dat$TourDate_Con[ind2] <- "fair"
dat$TourDate_Con[ind3] <- "good"

dat$TourDate_Con <- factor(dat$TourDate_Con, order=T,levels = c("poor","fair","good"))
# str(dat$TourDate_Con) check the levels

dat$TourDate <- NULL

#########################################
########## Recommend_GAT  ###############
#########################################
ind <- which(dat$Recommend_GAT == 0)
# length(ind)
# 540 "0"s, so we should put "0" into another group, and we will assign "0" to group "2"
dat$Recommend_GAT[ind] = 2
# unique(dat$Recommend_GAT)  check
dat$Recommend_GAT <- as.factor(dat$Recommend_GAT)


#######################################
########## TravelAgain  ###############
#######################################
ind <- which(dat$TravelAgain == 0)
# length(ind)
# 705 "0"s, we will assign "0" to group "2"
dat$TravelAgain[ind] = 2
# unique(dat$Recommend_GAT)  check
dat$TravelAgain <- as.factor(dat$TravelAgain)

###########################################
########## Groups_Interest  ###############
###########################################
# we are not going to use this variable
dat$Groups_Interest <- NULL

########## Reference  ###############
ind <- which(dat$Reference == 0)
# length(ind)
# 768 "0"s, we will assign "0" to group "1"
dat$Reference[ind] = 1
# unique(dat$Recommend_GAT)  check
dat$Reference <- as.factor(dat$Reference)

##########  Overall_Impression  ###############
# put 0, 1, 2 into 3
ind0 <- which(dat$Overall_Impression == 0)
ind1 <- which(dat$Overall_Impression == 1)
ind2 <- which(dat$Overall_Impression == 2)
ind <-c(ind0,ind1,ind2)
dat$Overall_Impression[ind] = 3
dat$Overall_Impression <- factor(dat$Overall_Impression, order =T, levels = c("3","4","5"))
# str(dat$Overall_Impression)

##########  Pre_Departure  ###############
# put 0 into 4
ind0 <- which(dat$Pre_Departure == 0)
dat$Pre_Departure[ind0] = 4
dat$Pre_Departure <- factor(dat$Pre_Departure, order =T, levels = c("1","2","3","4","5"))
# str(dat$Pre_Departure)

##########  Flight_Itin  ###############
# put 0,1,2 into 3
ind0 <- which(dat$Flight_Itin == 0)
ind1 <- which(dat$Flight_Itin == 1)
ind2 <- which(dat$Flight_Itin == 2)
ind <-c(ind0,ind1,ind2)
dat$Flight_Itin[ind] = 3
dat$Flight_Itin <- factor(dat$Flight_Itin, order =T, levels = c("3","4","5"))
# str(dat$Flight_Itin)

##########  TD_Overall  ###############
# put 0,1 into 2
ind0 <- which(dat$TD_Overall == 0)
ind1 <- which(dat$TD_Overall == 1)
ind <-c(ind0,ind1)
dat$TD_Overall[ind] = 2
dat$TD_Overall <- factor(dat$TD_Overall, order =T, levels = c("2","3","4"))
# str(dat$TD_Overall)


################  Hotels_Avg_Con  ##############
## Avg score can't be 0, if 0, then treat as missing. Here is not really treat 0 as NA
## Just assign 0 a level, eventually, it will be assigned to a new group

ind <- which(dat$Hotels_Avg==0)
# length(ind)
dat$Hotels_Avg[ind] <- "NA"
# str(dat$Hotels_Avg)

df1 <- dat[split, c("Hotels_Avg", "Book_12Mo")]

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Hotels_Avg"]] <- IV[["Tables"]][["Hotels_Avg"]][order(IV[["Tables"]][["Hotels_Avg"]]$WOE),]
# plot_infotables(IV, "Hotels_Avg")
woe <- IV[["Tables"]][["Hotels_Avg"]]

ind1 <- which(dat$Hotels_Avg <=2.7)
ind2 <- which(dat$Hotels_Avg <=3.2 & dat$Hotels_Avg >= 3)
ind3 <- which(dat$Hotels_Avg <=3.7 & dat$Hotels_Avg >= 3.3)
ind4 <- which(dat$Hotels_Avg <=2.9 & dat$Hotels_Avg >= 2.8 |dat$Hotels_Avg==4)

ind5 <- which(dat$Hotels_Avg <=3.9 & dat$Hotels_Avg >= 3.8)
ind5 <- c(ind5,ind)
length(ind1)+length(ind2)+length(ind3)+length(ind4)+length(ind5)
 
dat$Hotels_Avg_Con <- as.character(dat$Hotels_Avg)

dat$Hotels_Avg_Con[ind1] <- "grp1"
dat$Hotels_Avg_Con[ind2] <- "grp2"
dat$Hotels_Avg_Con[ind3] <- "grp3"
dat$Hotels_Avg_Con[ind4] <- "grp4"
dat$Hotels_Avg_Con[ind5] <- "grp5"

dat$Hotels_Avg_Con <- factor(dat$Hotels_Avg_Con, order = T,
                             levels=c("grp1","grp2","grp3","grp4","grp5"))
# str(dat$Hotels_Avg_Con)
dat$Hotels_Avg <- NULL


################################################
################  Meals_Avg_Con  ##############
################################################
ind <- which(dat$Meals_Avg==0)
# length(ind)
dat$Meals_Avg[ind] <- "NA"
# str(dat$Meals_Avg)

df1 <- dat[split, c("Meals_Avg", "Book_12Mo")]

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Meals_Avg"]] <- IV[["Tables"]][["Meals_Avg"]][order(IV[["Tables"]][["Meals_Avg"]]$WOE),]
# plot_infotables(IV, "Meals_Avg")
woe <- IV[["Tables"]][["Meals_Avg"]]

poor <- woe$Meals_Avg[which(woe$WOE <= 0)]
fair <- woe$Meals_Avg[which(woe$WOE <=0.02 & woe$WOE > 0)]
med <- woe$Meals_Avg[which(woe$WOE <= 0.19 & woe$WOE > 0.02)]
good <- woe$Meals_Avg[which(woe$WOE > 0.19)]

dat$Meals_Avg_Con <- as.character(dat$Meals_Avg)

ind1 <- which(dat$Meals_Avg_Con %in% poor)
ind2 <- which(dat$Meals_Avg_Con %in% fair)
ind3 <- which(dat$Meals_Avg_Con %in% med)
ind4 <- which(dat$Meals_Avg_Con %in% good)
# length(ind1)+length(ind2)+ length(ind3)+length(ind4)

dat$Meals_Avg_Con[ind1] <- "poor"
dat$Meals_Avg_Con[ind2] <- "fair"
dat$Meals_Avg_Con[ind3] <- "med"
dat$Meals_Avg_Con[ind4] <- "good"

dat$Meals_Avg_Con <- factor(dat$Meals_Avg_Con, order=T,
                            levels = c("poor","fair","med","good"))
# str(dat$Meals_Avg_Con)
dat$Meals_Avg <- NULL


################################################
################  GUSS_Avg_Con  ##############
################################################
ind <- which(dat$GUSS_Avg==0)
# length(ind)
dat$GUSS_Avg[ind] <- "NA"
# str(dat$GUSS_Avg)

df1 <- dat[split, c("GUSS_Avg", "Book_12Mo")]
IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["GUSS_Avg"]] <- IV[["Tables"]][["GUSS_Avg"]][order(IV[["Tables"]][["GUSS_Avg"]]$WOE),]
# plot_infotables(IV, "GUSS_Avg")
woe <- IV[["Tables"]][["GUSS_Avg"]]


poor <- woe$GUSS_Avg[which(woe$WOE < -0.1)]
fair <- woe$GUSS_Avg[which(woe$WOE <=0.01 & woe$WOE > -0.1)]
med <- woe$GUSS_Avg[which(woe$WOE <= 0.1 & woe$WOE > 0.02)]
good <- woe$GUSS_Avg[which(woe$WOE > 0.1)]
# length(poor)+length(fair)+ length(med)+length(good)
# length(unique(dat$GUSS_Avg))

dat$GUSS_Avg_Con <- as.character(dat$GUSS_Avg)

ind1 <- which(dat$GUSS_Avg_Con %in% poor)
ind2 <- which(dat$GUSS_Avg_Con %in% fair)
ind3 <- which(dat$GUSS_Avg_Con %in% med)
ind4 <- which(dat$GUSS_Avg_Con %in% good)
# length(ind1)+length(ind2)+ length(ind3)+length(ind4)

dat$GUSS_Avg_Con[ind1] <- "poor"
dat$GUSS_Avg_Con[ind2] <- "fair"
dat$GUSS_Avg_Con[ind3] <- "med"
dat$GUSS_Avg_Con[ind4] <- "good"

dat$GUSS_Avg_Con <- factor(dat$GUSS_Avg_Con, order = T,
                           levels = c("poor","fair","med","good"))
# str(dat$GUSS_Avg_Con)
dat$GUSS_Avg <- NULL


################################################
################  Optionals_Avg_Con  ###########
################################################
ind <- which(dat$Optionals_Avg==0)
# length(ind)
dat$Optionals_Avg[ind] <- "NA"

df1 <- dat[split, c("Optionals_Avg", "Book_12Mo")]
IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Optionals_Avg"]] <- IV[["Tables"]][["Optionals_Avg"]][order(IV[["Tables"]][["Optionals_Avg"]]$WOE),]
# plot_infotables(IV, "Optionals_Avg")
woe <- IV[["Tables"]][["Optionals_Avg"]]

poor <- woe$Optionals_Avg[which(woe$WOE < -0.2)]
poor <- c(poor, 1.2,1.3,1.4)
fair <- woe$Optionals_Avg[which(woe$WOE <=0 & woe$WOE > -0.2)]
good <- woe$Optionals_Avg[which(woe$WOE > 0)]
# length(poor)+length(fair)+length(good)
# length(unique(dat$Optionals_Avg))

dat$Optionals_Avg_Con <- as.character(dat$Optionals_Avg)

ind1 <- which(dat$Optionals_Avg_Con %in% poor)
ind2 <- which(dat$Optionals_Avg_Con %in% fair)
ind3 <- which(dat$Optionals_Avg_Con %in% good)

# length(ind1)+length(ind2)+ length(ind3)

dat$Optionals_Avg_Con[ind1] <- "poor"
dat$Optionals_Avg_Con[ind2] <- "fair"
dat$Optionals_Avg_Con[ind3] <- "good"

dat$Optionals_Avg_Con <- factor(dat$Optionals_Avg_Con, order = T,
                                levels = c("poor","fair","good"))
# str(dat$Optionals_Avg_Con)
dat$Optionals_Avg <- NULL

###############################
########## Age  ###############
###############################
df.Age <- dat[split,c("Age","Book_12Mo")]
IV.Age<- create_infotables(data=df.Age, y="Book_12Mo")
plot_infotables(IV.Age, "Age")

dat$Age_Con <- as.character(dat$Age) 
ind1 <- which(dat$Age %in% c("30-39","40-44","45-49"))
ind2 <- which(dat$Age %in% c("50-54","55-59","60-69","70-79"))
ind3 <- which(dat$Age %in% c("No Age","Over 80","Under 30"))
# length(ind1)+length(ind2)+length(ind3)

dat$Age_Con[ind1] <- "mid"
dat$Age_Con[ind2] <- "old"
dat$Age_Con[ind3] <- "mix"

dat$Age_Con <- factor(dat$Age_Con, order = T,
                                levels = c("mid","old","mix"))
dat$Age <- NULL

#################################
########## State  ###############
#################################
df.State <- dat[split, c("State","Book_12Mo")]
IV.State<- create_infotables(data=df.State, y="Book_12Mo")
IV.State[["Tables"]][["State"]] <- IV.State[["Tables"]][["State"]][order(IV.State[["Tables"]][["State"]]$WOE),]
x <-IV.State[["Tables"]][["State"]]

# plot_infotables(IV.State, "State")

low <- x$State[which(x$WOE < (-0.2) | x$WOE==0)]
fair <- x$State[which(x$WOE > (-0.2) & x$WOE<0)]
med <- x$State[which(x$WOE>0 & x$WOE<0.15)]
good <- x$State[which(x$WOE>0.15)]

st <- c(low, fair,med,good)
diff <- setdiff(levels(dat$State), st) # find the states which are not in the training dataset
low <- c(low, diff) # Put thoes states into low group

# length(low) + length(fair)+length(med)+length(good)
# str(dat$State)

dat$State_Con <- as.character(dat$State) 
ind1 <- which(dat$State %in% low)
ind2 <- which(dat$State %in% fair)
ind3 <- which(dat$State %in% med)
ind4 <- which(dat$State %in% good)
# length(ind1)+length(ind2)+length(ind3)+length(ind4)

dat$State_Con[ind1] <- "low"
dat$State_Con[ind2] <- "fair"
dat$State_Con[ind3] <- "med"
dat$State_Con[ind4] <- "good"

dat$State_Con <- factor(dat$State_Con, order = T,
                      levels = c("low","fair","med","good"))
levels(dat$State_Con)
dat$State <- NULL

##################################
##########  Email  ###############
##################################
# we combine "Bounced" and "Unavailable" together
dat$Email <- as.character(dat$Email)
ind <- which(dat$Email == "Bounced")
dat$Email[ind] <- "Unavailable"
dat$Email <- as.factor(dat$Email)
# levels(dat$Email)

######################################
##########  Optionals  ###############
######################################
ind <- which(dat$Optionals == 0)
# length(ind)
# 8024 "0"

df1 <- dat[split, c("Optionals", "Book_12Mo")]
df1$Optionals <- as.factor(df1$Optionals)
IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Optionals"]] <- IV[["Tables"]][["Optionals"]][order(IV[["Tables"]][["Optionals"]]$WOE),]
# plot_infotables(IV, "Optionals")
woe <- IV[["Tables"]][["Optionals"]]
# sum(woe$IV)
## IV = 0.645
poor <- woe$Optionals[which(woe$WOE <= -0.13)]
fair <- woe$Optionals[which(woe$WOE <=0 & woe$WOE > -0.13)]
med <- woe$Optionals[which(woe$WOE <= 0.22 & woe$WOE > 0)]
good <- woe$Optionals[which(woe$WOE > 0.22)]
# length(poor)+length(fair)+ length(med)+length(good)
# length(unique(dat$Optionals))
## missing 2 levels
# ind1 <- c(poor,fair,med,good)
# temp <- unique(dat$Optionals)
# ind1 <- as.numeric(ind1)
# setdiff(temp,ind1)
# 38, 45, 120

good <- c(good,120)
med <- c(med, 38,45)

dat$Optionals_Con <- as.character(dat$Optionals) 

ind1 <- which(dat$Optionals_Con %in% poor)
ind2 <- which(dat$Optionals_Con %in% fair)
ind3 <- which(dat$Optionals_Con %in% med)
ind4 <- which(dat$Optionals_Con %in% good)

# length(ind1)+length(ind2)+ length(ind3)+length(ind4)

dat$Optionals_Con[ind1] <- "poor"
dat$Optionals_Con[ind2] <- "fair"
dat$Optionals_Con[ind3] <- "med"
dat$Optionals_Con[ind4] <- "good"

dat$Optionals_Con <- factor(dat$Optionals_Con, order = T,
                            levels = c("poor","fair","med","good"))
# str(dat$Optionals_Con)
dat$Optionals <- NULL


#######################################
########  Domestic_Depart_Time  #######
#######################################
df <- dat[split, c("Domestic_Depart_Time", "Book_12Mo")]

IV <- create_infotables(data = df, y="Book_12Mo")
IV[["Tables"]][["Domestic_Depart_Time"]] <- IV[["Tables"]][["Domestic_Depart_Time"]][order(IV[["Tables"]][["Domestic_Depart_Time"]]$WOE),]
# plot_infotables(IV, "Domestic_Depart_Time")
woe <- IV[["Tables"]][["Domestic_Depart_Time"]]

low <- woe$Domestic_Depart_Time[which(woe$WOE < -0.18)]
fair <- woe$Domestic_Depart_Time[which(woe$WOE > -0.18 & woe$WOE<0.01)]
good <- woe$Domestic_Depart_Time[which(woe$WOE>0.01)]
# length(low) + length(fair)+length(good)
# levels(dat$Domestic_Depart_Time)

dat$Domestic_Depart_Time_Con <- as.character(dat$Domestic_Depart_Time)

ind1 <- which(dat$Domestic_Depart_Time_Con %in% low)
ind2 <- which(dat$Domestic_Depart_Time_Con %in% fair)
ind3 <- which(dat$Domestic_Depart_Time_Con %in% good)
# length(ind1)+length(ind2)+length(ind3)

dat$Domestic_Depart_Time_Con[ind1] <- "poor"
dat$Domestic_Depart_Time_Con[ind2] <- "fair"
dat$Domestic_Depart_Time_Con[ind3] <- "good"
dat$Domestic_Depart_Time_Con <- factor(dat$Domestic_Depart_Time_Con,
                                       order=T,levels = c("poor","fair","good"))
# str(dat$Domestic_Depart_Time_Con)
dat$Domestic_Depart_Time <- NULL


######################################
########  Domestic_Arrival_Time  #####
######################################
df <- dat[split, c("Domestic_Arrival_Time", "Book_12Mo")]
IV <- create_infotables(data = df, y="Book_12Mo")
IV[["Tables"]][["Domestic_Arrival_Time"]] <- IV[["Tables"]][["Domestic_Arrival_Time"]][order(IV[["Tables"]][["Domestic_Arrival_Time"]]$WOE),]
# plot_infotables(IV, "Domestic_Arrival_Time")
woe <- IV[["Tables"]][["Domestic_Arrival_Time"]]

low <- woe$Domestic_Arrival_Time[which(woe$WOE < -0.2)]
fair <- woe$Domestic_Arrival_Time[which(woe$WOE > -0.2 & woe$WOE<0.01)]
med <- woe$Domestic_Arrival_Time[which(woe$WOE > 0.01 & woe$WOE<0.1)]
good <- woe$Domestic_Arrival_Time[which(woe$WOE>0.1)]
# length(low) + length(fair)+length(med)+length(good)
# length(levels(dat$Domestic_Arrival_Time))
# it's alright we have one more level since I put NA in good level
dat$Domestic_Arrival_Time_Con <- as.character(dat$Domestic_Arrival_Time)
ind1 <- which(dat$Domestic_Arrival_Time_Con %in% low)
ind2 <- which(dat$Domestic_Arrival_Time_Con %in% fair)
ind3 <- which(dat$Domestic_Arrival_Time_Con %in% med)
ind4 <- which(dat$Domestic_Arrival_Time_Con %in% good)
# length(ind1)+length(ind2)+length(ind3)+length(ind4)

dat$Domestic_Arrival_Time_Con[ind1] <- "poor"
dat$Domestic_Arrival_Time_Con[ind2] <- "fair"
dat$Domestic_Arrival_Time_Con[ind3] <- "med"
dat$Domestic_Arrival_Time_Con[ind4] <- "good"
dat$Domestic_Arrival_Time_Con <- factor(dat$Domestic_Arrival_Time_Con,
                                        order=T,levels = c("poor","fair","med","good"))
# str(dat$Domestic_Arrival_Time_Con)
dat$Domestic_Arrival_Time <- NULL


#####################################
########  Intr_Depart_Time  #########
#####################################
df1 <- dat[split, c("Intr_Depart_Time", "Book_12Mo")]
IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Intr_Depart_Time"]] <- IV[["Tables"]][["Intr_Depart_Time"]][order(IV[["Tables"]][["Intr_Depart_Time"]]$WOE),]
# plot_infotables(IV, "Intr_Depart_Time")
woe <- IV[["Tables"]][["Intr_Depart_Time"]]

low <- woe$Intr_Depart_Time[which(woe$WOE < 0)]
good <- woe$Intr_Depart_Time[which(woe$WOE>=0)]
# length(low) + length(good)
# length(levels(dat$Intr_Depart_Time))
# it's alright we have one more level since I put NA in good level

dat$Intr_Depart_Time_Con <- as.character(dat$Intr_Depart_Time)
ind1 <- which(dat$Intr_Depart_Time_Con %in% low)
ind2 <- which(dat$Intr_Depart_Time_Con %in% good)
# length(ind1)+length(ind2)

dat$Intr_Depart_Time_Con[ind1] <- "poor"
dat$Intr_Depart_Time_Con[ind2] <- "good"
dat$Intr_Depart_Time_Con <- factor(dat$Intr_Depart_Time_Con, levels = c("poor","good"))
# levels(dat$Intr_Depart_Time_Con)

dat$Intr_Depart_Time <- NULL


#####################################
########  Intr_Arrival_Time  ########
#####################################
df1 <- dat[split, c("Intr_Arrival_Time", "Book_12Mo")]
df1$Book_12Mo <- as.numeric(df1$Book_12Mo)
IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Intr_Arrival_Time"]] <- IV[["Tables"]][["Intr_Arrival_Time"]][order(IV[["Tables"]][["Intr_Arrival_Time"]]$WOE),]
# plot_infotables(IV, "Intr_Arrival_Time")
woe <- IV[["Tables"]][["Intr_Arrival_Time"]]

low <- woe$Intr_Arrival_Time[which(woe$WOE < -0.1)]
fair <- woe$Intr_Arrival_Time[which(woe$WOE > -0.1 & woe$WOE <=0)]
med <- woe$Intr_Arrival_Time[which(woe$WOE > 0 & woe$WOE <= 0.15)]
good <- woe$Intr_Arrival_Time[which(woe$WOE>0.15)]
# length(low) + length(fair)+ length(med)+length(good)
# length(levels(dat$Intr_Depart_Time))
# it's alright we have one more level since I put NA in good level

dat$Intr_Arrival_Time_Con <- as.character(dat$Intr_Arrival_Time)

ind1 <- which(dat$Intr_Arrival_Time_Con %in% low)
ind2 <- which(dat$Intr_Arrival_Time_Con %in% fair)
ind3 <- which(dat$Intr_Arrival_Time_Con %in% med)
ind4 <- which(dat$Intr_Arrival_Time_Con %in% good)
# length(ind1)+length(ind2)+ length(ind3)+length(ind4)

dat$Intr_Arrival_Time_Con[ind1] <- "poor"
dat$Intr_Arrival_Time_Con[ind2] <- "fair"
dat$Intr_Arrival_Time_Con[ind3] <- "med"
dat$Intr_Arrival_Time_Con[ind4] <- "good"
dat$Intr_Arrival_Time_Con <- factor(dat$Intr_Arrival_Time_Con, 
                                    order = T, levels = c("poor","fair","med","good"))
# str(dat$Intr_Arrival_Time_Con)
dat$Intr_Depart_Time <- NULL


################################################
########  Outbound_Connect_Time_Mins_1  ########
################################################
df1 <- dat[split, c("Outbound_Connect_Time_Mins_1", "Book_12Mo")]
df1$Book_12Mo <- as.numeric(df1$Book_12Mo)

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Outbound_Connect_Time_Mins_1"]] <- IV[["Tables"]][["Outbound_Connect_Time_Mins_1"]][order(IV[["Tables"]][["Outbound_Connect_Time_Mins_1"]]$WOE),]
# plot_infotables(IV, "Outbound_Connect_Time_Mins_1")
woe <- IV[["Tables"]][["Outbound_Connect_Time_Mins_1"]]

ind1 <- which(dat$Outbound_Connect_Time_Mins_1 >=-1 & dat$Outbound_Connect_Time_Mins_1<=61)
ind2 <- which(dat$Outbound_Connect_Time_Mins_1 >=62 & dat$Outbound_Connect_Time_Mins_1<=80|dat$Outbound_Connect_Time_Mins_1==-1270)
ind3 <- which(dat$Outbound_Connect_Time_Mins_1 >=81 & dat$Outbound_Connect_Time_Mins_1<=101)
ind4 <- which(dat$Outbound_Connect_Time_Mins_1 >=102 & dat$Outbound_Connect_Time_Mins_1<=126)
ind5 <- which(dat$Outbound_Connect_Time_Mins_1 >=127 & dat$Outbound_Connect_Time_Mins_1<=153)
ind6 <- which(dat$Outbound_Connect_Time_Mins_1 >=154 & dat$Outbound_Connect_Time_Mins_1<=248)
ind7 <- which(dat$Outbound_Connect_Time_Mins_1 >248)

dat$Out_Connect_Mins1_Con <- as.character(dat$Outbound_Connect_Time_Mins_1)

dat$Out_Connect_Mins1_Con[ind1] <- "grp1"
ind8 <- c(ind2,ind3,ind4,ind5,ind7)
dat$Out_Connect_Mins1_Con[ind8] <- "grp2"
dat$Out_Connect_Mins1_Con[ind6] <- "grp3"

dat$Out_Connect_Mins1_Con <- as.factor(dat$Out_Connect_Mins1_Con)
# levels(dat$Out_Connect_Mins1_Con)
dat$Outbound_Connect_Time_Mins_1 <- NULL

################################################
########  Outbound_Connect_Time_Mins_2  ########
################################################
df1 <- dat[split, c("Outbound_Connect_Time_Mins_2", "Book_12Mo")]

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Outbound_Connect_Time_Mins_2"]] <- IV[["Tables"]][["Outbound_Connect_Time_Mins_2"]][order(IV[["Tables"]][["Outbound_Connect_Time_Mins_2"]]$WOE),]
# plot_infotables(IV, "Outbound_Connect_Time_Mins_2")
woe <- IV[["Tables"]][["Outbound_Connect_Time_Mins_2"]]

ind1 <- which(dat$Outbound_Connect_Time_Mins_2 >=-1 & dat$Outbound_Connect_Time_Mins_2<=64)
ind2 <- which(dat$Outbound_Connect_Time_Mins_2 >=65 & dat$Outbound_Connect_Time_Mins_2<=134)
ind3 <- which(dat$Outbound_Connect_Time_Mins_2 >=135)

dat$Out_Connect_Mins2_Con <- as.character(dat$Outbound_Connect_Time_Mins_2)

dat$Out_Connect_Mins2_Con[ind1] <- "grp1"
dat$Out_Connect_Mins2_Con[ind2] <- "grp2"
dat$Out_Connect_Mins2_Con[ind3] <- "grp3"

dat$Out_Connect_Mins2_Con <- as.factor(dat$Out_Connect_Mins2_Con)
# levels(dat$Out_Connect_Mins2_Con)
dat$Outbound_Connect_Time_Mins_2 <- NULL


################################################
########  Return_Connect_Time_Mins_1  ########
################################################
df1 <- dat[split, c("Return_Connect_Time_Mins_1", "Book_12Mo")]

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Return_Connect_Time_Mins_1"]] <- IV[["Tables"]][["Return_Connect_Time_Mins_1"]][order(IV[["Tables"]][["Return_Connect_Time_Mins_1"]]$WOE),]
# plot_infotables(IV, "Return_Connect_Time_Mins_1")
woe <- IV[["Tables"]][["Return_Connect_Time_Mins_1"]]

ind1 <- which(dat$Return_Connect_Time_Mins_1 >=110 & dat$Return_Connect_Time_Mins_1<=134)

ind2a <- which(dat$Return_Connect_Time_Mins_1 >=135 & dat$Return_Connect_Time_Mins_1<=167)
ind2b <- which(dat$Return_Connect_Time_Mins_1 >=215 & dat$Return_Connect_Time_Mins_1<=269)
ind2 <- c(ind2a, ind2b)

ind3a <- which(dat$Return_Connect_Time_Mins_1 <= -100)
ind3b <- which(dat$Return_Connect_Time_Mins_1 >=-1 & dat$Return_Connect_Time_Mins_1<=89)
ind3c <- which(dat$Return_Connect_Time_Mins_1 >=168 & dat$Return_Connect_Time_Mins_1<=214)
ind3 <- c(ind3a, ind3b, ind3c)

ind4a <- which(dat$Return_Connect_Time_Mins_1 >= 270)
ind4b <- which(dat$Return_Connect_Time_Mins_1 >=90 & dat$Return_Connect_Time_Mins_1<=109)
ind4 <- c(ind4a, ind4b)
# length(ind1)+length(ind2)+length(ind3)+length(ind4)

dat$Return_Connect_Mins1_Con <- as.character(dat$Return_Connect_Time_Mins_1)

dat$Return_Connect_Mins1_Con[ind1] <- "grp1"
dat$Return_Connect_Mins1_Con[ind2] <- "grp2"
dat$Return_Connect_Mins1_Con[ind3] <- "grp3"
dat$Return_Connect_Mins1_Con[ind4] <- "grp4"

dat$Return_Connect_Mins1_Con <- as.factor(dat$Return_Connect_Mins1_Con)
# levels(dat$Return_Connect_Mins1_Con)
dat$Return_Connect_Time_Mins_1 <- NULL


################################################
########  Return_Connect_Time_Mins_2  ########
################################################
df1 <- dat[split, c("Return_Connect_Time_Mins_2", "Book_12Mo")]

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Return_Connect_Time_Mins_2"]] <- IV[["Tables"]][["Return_Connect_Time_Mins_2"]][order(IV[["Tables"]][["Return_Connect_Time_Mins_2"]]$WOE),]
# plot_infotables(IV, "Return_Connect_Time_Mins_2")
woe <- IV[["Tables"]][["Return_Connect_Time_Mins_2"]]

ind1 <- which(dat$Return_Connect_Time_Mins_2 >=165)
ind2 <- which(dat$Return_Connect_Time_Mins_2 >=86 & dat$Return_Connect_Time_Mins_2<=164)
ind3 <- which(dat$Return_Connect_Time_Mins_2 >=-1 & dat$Return_Connect_Time_Mins_2<=85)
# length(ind1)+length(ind2)+length(ind3)

dat$Return_Connect_Mins2_Con <- as.character(dat$Return_Connect_Time_Mins_2)

dat$Return_Connect_Mins2_Con[ind1] <- "grp1"
dat$Return_Connect_Mins2_Con[ind2] <- "grp2"
dat$Return_Connect_Mins2_Con[ind3] <- "grp3"


dat$Return_Connect_Mins2_Con <- as.factor(dat$Return_Connect_Mins2_Con)
# levels(dat$Return_Connect_Mins1_Con)
dat$Return_Connect_Time_Mins_2 <- NULL

save(dat, file = "digger_dat.RData")




