###############  library  ###############
library(tidyverse)
library(Information)
library(caTools)





###############  Function  ###############















###########################################
###############  Load Data  ###############
###########################################
dat <- read.csv("D:/Google Drive/Math/Data Mining/Project/modeling_data.csv", 
                header=TRUE, na.strings=c(".", "NA", "", "?"))
# library(caTools)
set.seed(27947)
split = sample.split(dat$Book_12Mo, SplitRatio = 0.5) 
split.valid <-!split
split.test <- !split
split2 <- sample.split(dat$Book_12Mo[!split], SplitRatio = 0.5)
split.valid[split.valid == TRUE] = split2
split.test[split.test == TRUE] = !split2

#####################################################
################  Data Consolidation  ###############
#####################################################
## Get the names for every column, and column #
Varnames <- as.data.frame(seq(from=1, to=ncol(dat)), col.names="index")
colnames(Varnames)[1] <-"index"
Varnames$name <- names(dat) 

# library(Information)
########## Tour_Days  ###############
df.TourDays <- dat[split, c("Tour_Days", "Book_12Mo")]
df.TourDays$Tour_Days <- as.factor(df.TourDays$Tour_Days)

IV.TourDays <- create_infotables(data = df.TourDays, y="Book_12Mo")  
IV.TourDays[["Tables"]][["Tour_Days"]] <- IV.TourDays[["Tables"]][["Tour_Days"]][order(IV.TourDays[["Tables"]][["Tour_Days"]]$WOE),]
# plot_infotables(IV.TourDays, "Tour_Days")
woe.TourDays1 <- IV.TourDays[["Tables"]][["Tour_Days"]]

fctr1 <- c(6,4,17,9,11,15,12,21,24)
fctr2 <- c(16,13,10,14,23,18,1)
fctr3 <- c(7,8,19)
dat$Tour_Days_Con <- dat$Tour_Days

ind1 <- which(dat$Tour_Days_Con %in% fctr1)
ind2 <- which(dat$Tour_Days_Con %in% fctr2)
ind3 <- which(dat$Tour_Days_Con %in% fctr3)
dat$Tour_Days_Con[ind1] <- "fctr1"
dat$Tour_Days_Con[ind2] <- "fctr2"
dat$Tour_Days_Con[ind3] <- "fctr3"
length(ind1)+length(ind2)+length(ind3)

dat$Tour_Days_Con <- as.factor(dat$Tour_Days)

########## Grp_size_ratio_Con  ###############
##  This is a new variable we created. size_ratio = Grp_Size/Capacity
##  size_ratio_Con is variable consolidation for Grp_size_ratio
dat$Grp_Size_ratio <- dat$Grp_Size/dat$Capacity

df.ratio <- dat[split,c("Grp_Size_ratio","Book_12Mo")]
IV.ratio <- create_infotables(data=df.ratio, y="Book_12Mo", bins = 5)
# plot_infotables(IV.ratio, "Grp_Size_ratio")

dat$Grp_Size_ratio_Con <- dat$Grp_Size_ratio 
ind1 <- which(dat$Grp_Size_ratio<=0.55)
ind2 <- which(dat$Grp_Size_ratio<=0.73 & dat$Grp_Size_ratio>0.55)
ind3 <- which(dat$Grp_Size_ratio>0.73)

dat$Grp_Size_ratio_Con[ind1] <- "low"
dat$Grp_Size_ratio_Con[ind2] <- "med"
dat$Grp_Size_ratio_Con[ind3] <- "compact"
dat$Grp_Size_ratio_Con <- factor(dat$Grp_Size_ratio_Con, order =T,levels = c("compact","med","low"))


levels(dat$Grp_Size_ratio_Con)
str(dat$Grp_Size_ratio_Con)
########## TourDate ###############
df.TourDate <- dat[split, c("TourDate", "Book_12Mo")]
df.TourDate$TourDate <- as.factor(df.TourDate$TourDate)

IV.TourDate <- create_infotables(data = df.TourDate, y="Book_12Mo")
IV.TourDate[["Tables"]][["TourDate"]] <- IV.TourDate[["Tables"]][["TourDate"]][order(IV.TourDate[["Tables"]][["TourDate"]]$WOE),]
# plot_infotables(IV.TourDate, "TourDate")
woe.TourDate <- IV.TourDate[["Tables"]][["TourDate"]]

## now,we are going to find which dates will be assigned to which group
low <- woe.TourDate$TourDate[which(woe.TourDate$WOE < -0.14)]
fair <- woe.TourDate$TourDate[which(woe.TourDate$WOE > -0.14 & woe.TourDate$WOE<0.07)]
good <- woe.TourDate$TourDate[which(woe.TourDate$WOE>0.07)]

dat$TourDate_Con <- as.character(dat$TourDate) 

ind1 <- which(dat$TourDate %in% low) # find the indices that will be assigned to "low" group
ind2 <- which(dat$TourDate %in% fair) # find the indices that will be assigned to "med" group
ind3 <- which(dat$TourDate %in% good) # find the indices that will be assigned to "good" group
# length(ind1)+length(ind2)+length(ind3) # check the number is right 

dat$TourDate_Con[ind1] <- "poor"
dat$TourDate_Con[ind2] <- "fair"
dat$TourDate_Con[ind3] <- "good"

dat$TourDate_Con <- factor(dat$TourDate_Con, order=T,levels = c("poor","fair","good"))
# str(dat$TourDate_Con) check the levels

dat$TourDate <- NULL

########## Recommend_GAT  ###############
ind <- which(dat$Recommend_GAT == 0)
length(ind)
# 540 "0"s, so we should put "0" into another group, and we will assign "0" to group "2"
dat$Recommend_GAT[ind] = 2
# unique(dat$Recommend_GAT)  check
dat$Recommend_GAT <- as.factor(dat$Recommend_GAT)

########## TravelAgain  ###############
ind <- which(dat$TravelAgain == 0)
length(ind)
# 705 "0"s, we will assign "0" to group "2"
dat$TravelAgain[ind] = 2
# unique(dat$Recommend_GAT)  check
dat$TravelAgain <- as.factor(dat$TravelAgain)

########## Groups_Interest  ###############
# we are not going to use this variable
dat$Groups_Interest <- NULL

########## Reference  ###############
ind <- which(dat$Reference == 0)
length(ind)
# 768 "0"s, we will assign "0" to group "1"
dat$Reference[ind] = 1
# unique(dat$Recommend_GAT)  check
dat$Reference <- as.factor(dat$Reference)

##########  Overall_Impression  ###############
# put 0, 1, 2 into 3
ind0 <- which(dat$Overall_Impression == 0)
ind1 <- which(dat$Overall_Impression == 1)
ind2 <- which(dat$Overall_Impression == 2)
ind <-c(ind0,ind1,ind2)
dat$Overall_Impression[ind] = 3
dat$Overall_Impression <- factor(dat$Reference, order =T, levels = c("3","4","5"))
str(dat$Overall_Impression)

##########  Pre_Departure  ###############
# put 0 into 4
ind0 <- which(dat$Pre_Departure == 0)
dat$Pre_Departure[ind0] = 4
dat$Pre_Departure <- factor(dat$Pre_Departure, order =T, levels = c("1","2","3","4","5"))
str(dat$Pre_Departure)

##########  Flight_Itin  ###############
# put 0,1,2 into 3
ind0 <- which(dat$Flight_Itin == 0)
ind1 <- which(dat$Flight_Itin == 1)
ind2 <- which(dat$Flight_Itin == 2)
ind <-c(ind0,ind1,ind2)
dat$Flight_Itin[ind] = 3
dat$Flight_Itin <- factor(dat$Flight_Itin, order =T, levels = c("3","4","5"))
str(dat$Flight_Itin)

##########  TD_Overall  ###############
# put 0,1 into 2
ind0 <- which(dat$TD_Overall == 0)
ind1 <- which(dat$TD_Overall == 1)
ind <-c(ind0,ind1)
dat$TD_Overall[ind] = 2
dat$TD_Overall <- factor(dat$TD_Overall, order =T, levels = c("2","3","4"))
str(dat$TD_Overall)

################  Hotels_Avg_Con  ##############
## Avg score can't be 0, if 0, then treat as missing. Here is not really treat 0 as NA
## Just assign 0 a level, eventually, it will be assigned to a new group

ind <- which(dat$Hotels_Avg==0)
length(ind)
dat$Hotels_Avg[ind] <- "NA"
str(dat$Hotels_Avg)

df1 <- dat[split, c("Hotels_Avg", "Book_12Mo")]

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Hotels_Avg"]] <- IV[["Tables"]][["Hotels_Avg"]][order(IV[["Tables"]][["Hotels_Avg"]]$WOE),]
# plot_infotables(IV, "Hotels_Avg")
woe <- IV[["Tables"]][["Hotels_Avg"]]

ind1 <- which(dat$Hotels_Avg <=2.7)
ind2 <- which(dat$Hotels_Avg <=3.2 & dat$Hotels_Avg >= 3)
ind3 <- which(dat$Hotels_Avg <=3.7 & dat$Hotels_Avg >= 3.3)
ind4 <- which(dat$Hotels_Avg <=2.9 & dat$Hotels_Avg >= 2.8 |dat$Hotels_Avg==4)

ind5 <- which(dat$Hotels_Avg <=3.9 & dat$Hotels_Avg >= 3.8)
ind <- which(dat$Hotels_Avg == "NA")
ind5 <- c(ind5,ind)
length(ind1)+length(ind2)+length(ind3)+length(ind4)+length(ind5)

dat$Hotels_Avg_Con <- dat$Hotels_Avg 
dat$Hotels_Avg_Con <- as.character(dat$Hotels_Avg_Con)

dat$Hotels_Avg_Con[ind1] <- "grp1"
dat$Hotels_Avg_Con[ind2] <- "grp2"
dat$Hotels_Avg_Con[ind3] <- "grp3"
dat$Hotels_Avg_Con[ind4] <- "grp4"
dat$Hotels_Avg_Con[ind5] <- "grp5"

dat$Hotels_Avg_Con <- factor(dat$Hotels_Avg_Con, order = T,
                             levels=c("grp1","grp2","grp3","grp4","grp5"))
str(dat$Hotels_Avg_Con)
dat$Hotels_Avg <- NULL

################################################
################  Meals_Avg_Con  ##############
################################################
ind <- which(new.tours$Meals_Avg==0)
length(ind)
new.tours$Meals_Avg[ind] <- "NA"
str(new.tours$Hotels_Avg)
ind <- which(new.tours$Meals_Avg =="NA")
length(ind)
unique(new.tours$Meals_Avg)


df1 <- new.tours[split, c("Meals_Avg", "Book_12Mo")]
df1$Book_12Mo <- as.numeric(df1$Book_12Mo)
# I don't knwo why onec it convert to numeric, 0 becomes to 1, and 1 becomes to 0
ind <- which(df1$Book_12Mo == 1)
df1$Book_12Mo[ind] = 0
ind <- which(df1$Book_12Mo == 2)
df1$Book_12Mo[ind] = 1
mean(df1$Book_12Mo) # Check

IV <- create_infotables(data = df1, y="Book_12Mo")
IV[["Tables"]][["Meals_Avg"]] <- IV[["Tables"]][["Meals_Avg"]][order(IV[["Tables"]][["Meals_Avg"]]$WOE),]
plot_infotables(IV, "Meals_Avg")
woe <- IV[["Tables"]][["Meals_Avg"]]
sum(woe$IV)

poor <- woe$Meals_Avg[which(woe$WOE <= 0)]
fair <- woe$Meals_Avg[which(woe$WOE <=0.02 & woe$WOE > 0)]
med <- woe$Meals_Avg[which(woe$WOE <= 0.19 & woe$WOE > 0.02)]
good <- woe$Meals_Avg[which(woe$WOE > 0.19)]

new.tours$Meals_Avg_Con <- new.tours$Meals_Avg 
new.tours$Meals_Avg_Con <- as.character(new.tours$Meals_Avg_Con)

ind1 <- which(new.tours$Meals_Avg_Con %in% poor)
ind2 <- which(new.tours$Meals_Avg_Con %in% fair)
ind3 <- which(new.tours$Meals_Avg_Con %in% med)
ind4 <- which(new.tours$Meals_Avg_Con %in% good)
length(ind1)+length(ind2)+ length(ind3)+length(ind4)

new.tours$Meals_Avg_Con[ind1] <- "poor"
new.tours$Meals_Avg_Con[ind2] <- "fair"
new.tours$Meals_Avg_Con[ind3] <- "med"
new.tours$Meals_Avg_Con[ind4] <- "good"

new.tours$Meals_Avg_Con <- as.factor(new.tours$Meals_Avg_Con)
levels(new.tours$Meals_Avg_Con)
new.tours$Meals_Avg_Con <- factor(new.tours$Meals_Avg_Con, levels = c("poor","fair","med","good"))
