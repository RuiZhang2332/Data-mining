##################  Load Data ##################

model <- read.csv("D:/Google Drive/Math/Data Mining/Project/modeling_data.csv", 
                  header=TRUE, na.strings=c(".", "NA", "", "?"))

score <- read.csv("D:/Google Drive/Math/Data Mining/Project/scoring_data.csv", 
                  header=TRUE, na.strings=c(".", "NA", "", "?"))


##################  Load Function  ############

inx <- function (data, inp.n) { # data: current dataframe; inp.n: position for non-inputs
  # numeric input indicator
  indx <- sapply(data, is.numeric)
  indx[inp.n]<-FALSE
  
  # nominal input indicator
  index.cat<-sapply(data, is.factor)
  index.cat[inp.n]<-FALSE
  
  # missing value indicator
  index.na<-sapply(data,function(x) any(is.na(x)))
  index.na[inp.n]<-FALSE
  
  data.frame(indx, index.cat, index.na)
}


########################################################################################
########################################################################################

inputs <- as.data.frame(seq(from=1, to=93), col.names="index")
colnames(inputs)[1] <-"index"
inputs$model <- names(model) 
inputs <- inputs[-93,]
inputs$score <- names(score)

## The following variables we want them to be factor variables
indx <- sapply(data, is.factor) 
indice <- which(indx==TRUE)
indice <- unname(indice)
diff <- vector(mode = "list", length = length(indice))   # create an empty list
for (i in seq(1:34)){
  temp <- indice[i]
  level1 <- levels(model[,temp])
  level2 <- levels(score[,temp])
  diff[[i]] <- setdiff(level1, level2)
}


temp <- indice[13]
diff_date <- diff[[13]]
score_date <- as.character(unique(score[,temp]))
model_date <- as.character(unique(model[,temp]))
xxx <-which(diff_date %in% score_date) 
xxx1 <-match(diff_date, model_date) 

### Hahaha, guess what, There are 416 different dates, and all of them are from model date. So, we need to 
### So, we need to redo consolidation for this variable. I think just use month/year should be fine.
model$TourDate <- as.Date(model$TourDate, "%m/%d/%Y")
model$TourDate <- format(model$TourDate, "%m/%Y")

score$TourDate <- as.Date(score$TourDate, "%m/%d/%Y")
score$TourDate <- format(score$TourDate, "%m/%Y")

### OK, let's check "TourDate" now
score_date <- unique(score[,temp])
model_date <- unique(model[,temp])
setdiff(model_date, score_date)

### OK, nice, there is no difference now
