##################  Load Data ##################

model <- read.csv("D:/Google Drive/Math/Data Mining/Project/modeling_data.csv", 
                  header=TRUE, na.strings=c(".", "NA", "", "?"))

score <- read.csv("D:/Google Drive/Math/Data Mining/Project/scoring_data.csv", 
                  header=TRUE, na.strings=c(".", "NA", "", "?"))


##################  Load Function  ############

inx <- function (data, inp.n) { # data: current dataframe; inp.n: position for non-inputs
  # numeric input indicator
  indx <- sapply(data, is.numeric)
  indx[inp.n]<-FALSE
  
  # nominal input indicator
  index.cat<-sapply(data, is.factor)
  index.cat[inp.n]<-FALSE
  
  # missing value indicator
  index.na<-sapply(data,function(x) any(is.na(x)))
  index.na[inp.n]<-FALSE
  
  data.frame(indx, index.cat, index.na)
}


########################################################################################
########################################################################################

inputs <- as.data.frame(seq(from=1, to=93), col.names="index")
colnames(inputs)[1] <-"index"
inputs$model <- names(model) 
inputs <- inputs[-93,]
inputs$score <- names(score)

## The following variables we want them to be factor variables
indx <- sapply(model, is.factor) 
indice <- which(indx==TRUE)
indice <- unname(indice)
diff1 <- vector(mode = "list", length = length(indice))   # create an empty list
diff2 <- vector(mode = "list", length = length(indice))   # create an empty list
for (i in seq(1:34)){
  temp <- indice[i]
  level1 <- levels(model[,temp])
  level2 <- levels(score[,temp])
  diff1[[i]] <- setdiff(level1, level2)    ## setdiff(x,y) are are those elements in x but not in y
  diff2[[i]] <- setdiff(level2, level1)
}

temp <- indice[13]
diff_date <- diff1[[13]]
score_date <- as.character(unique(score[,temp]))
model_date <- as.character(unique(model[,temp]))
xxx <-which(diff_date %in% score_date) 
xxx1 <-match(diff_date, model_date) 

### Hahaha, guess what, There are 416 different dates, and all of them are from model date. So, we need to 
### So, we need to redo consolidation for this variable. I think just use month/year should be fine.

#############################
### Fix "TourDate" levels ###
#############################
model$TourDate <- as.Date(model$TourDate, "%m/%d/%Y")
model$TourDate <- format(model$TourDate, "%m/%Y")

score$TourDate <- as.Date(score$TourDate, "%m/%d/%Y")
score$TourDate <- format(score$TourDate, "%m/%Y")

### OK, let's check "TourDate" now
score_date <- unique(score$TourDate)
model_date <- unique(model$TourDate)
setdiff(model_date, score_date)

### OK, nice, there is no difference now


##########################
### Fix "State" levels ###
##########################

diff_state <- diff[[18]]

model_state <- levels(model$State)
score_state <- levels(score$State)
addScore <- setdiff(model_state, score_state)
addScore
# "GR" "QL" "SE" "SF" "SW" "XS", add these 6 states into scoring dataset

levels(score$State) <- c(levels(score$State), addScore)   # Add 6 levels into scoring dataset
levels(score$State)
length(levels(score$State))

###############################
### Fix "SourceType" levels ###
###############################

temp <- indice[19]
levels(model[,64])
levels(score[,64])
## "Advertising" "Catalog BRC" "Direct Mail" "Internet"    "Old Src IDs" "Organic Web" "Other"  "Outside Sal"
## "Referral"    "SJMC"        "Web Booking"

##  "Advertising" "Catalog BRC" "Direct Mail" "Internet"    "Old Src IDs" "Organic Web" "Other"       "Referral"   
## "SJMC"        "Web Booking"

## in the scoring dataset, "SourceType"(64) variable misses level "Outside Sal"
xxx1 <- score[, 64]
levels(score$SourceType) <- c(levels(score$SourceType), "Outside Sal")   # Add level "outside Sal" into scoring dataset


##############################################
### Fix "Outbound_Domestic_Gateway" levels ###
##############################################
diff1[[23]]
indice[23]
##  75
## "ABE" "ABI" "AEX" "BMI" "BZN" "C"   "CHO" "CLD" "ERI" "EWN" "HRL" "MHT" "MKG" "PAR" "PIR" "SBN" "SJT" "STC"
## "SWF" "TUP" "YLW" "YUL" "YWG" "YXE"
## Above levels missing in the scoring dataset

length(levels(score[,75]))
levels(score[,75]) <- c(levels(score[,75]), diff1[[23]])   
length(levels(score[,75]))

##############################################
############  Fix Time levels  ###############
##############################################
## 76, 82, 85, 91
ind <- c(76,82,85,91)

## convert to time 
for (i in seq(1:4)){
  temp <- ind[i]
  model[,temp] <- times(model[,temp])
}

## only keep hour
for (i in seq(1:4)){
  temp <- ind[i]
  score[,temp] <- hours(score[,temp])
}

for (i in seq(1:4)){
  temp <- ind[i]
  model[ ,temp] <- as.factor(model[ ,temp])
  score[ ,temp] <- as.factor(score[ ,temp])
}

diff3 <- vector(mode = "list", length = length(ind))   # create an empty list
diff4 <- vector(mode = "list", length = length(ind))   # create an empty list
for (i in seq(1:4)){
  temp <- ind[i]
  level1 <- levels(model[,temp])
  level2 <- levels(score[,temp])
  diff3[[i]] <- setdiff(level1, level2)    ## setdiff(x,y) are are those elements in x but not in y
  diff4[[i]] <- setdiff(level2, level1)
}

## Shows we need to add level "2" into scoring dataset for variable 76 and 91.
levels(score[ ,76])
levels(model[ ,76])
levels(score[,76]) <- c(levels(score[,76]), "2")   

levels(score[ ,91])
levels(model[ ,91])
levels(score[,91]) <- c(levels(score[,91]), "2") 

